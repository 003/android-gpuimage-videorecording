apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

version = VERSION_NAME
group = GROUP
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

android {
    compileSdkVersion COMPILE_SDK_VERSION as int
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int

        versionCode = VERSION_CODE
        versionName = VERSION_NAME

        ndk {
            moduleName "gpuimage-library"
            stl "gnustl_shared"
            abiFilters "armeabi", "armeabi-v7a", "x86", "mips"
            ldLibs "log"
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        instrumentTest.setRoot('tests')
    }

    lintOptions {
        abortOnError false
    }
}


configurations {
    archives {
        extendsFrom configurations.default
    }
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
}

uploadArchives {
    configuration = configurations.archives
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            def sonatypeRepo = isReleaseVersion ?
                    "https://oss.sonatype.org/service/local/staging/deploy/maven2/" :
                    "https://oss.sonatype.org/content/repositories/snapshots/"

            repository(url: sonatypeRepo) {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            pom.project {
                artifactId 'gpuimage-library'
                name 'GPUImage for Android Library'
                packaging 'aar'
                description 'Image filters for Android with OpenGL (based on GPUImage for iOS)'
                url 'https://github.com/cyberagent/android-gpuimage/'

                scm {
                    url 'scm:git@github.com:CyberAgent/android-gpuimage.git'
                    connection 'scm:git@github.com:CyberAgent/android-gpuimage.git'
                    developerConnection 'scm:git@github.com:CyberAgent/android-gpuimage.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'pboos'
                        name 'Patrick Boos'
                        email 'patrickboos85@gmail.com'
                    }
                }
            }
        }
    }
}
